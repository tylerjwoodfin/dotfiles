- hosts: localhost
  become: yes
  gather_facts: yes
  tags:
    - all

  tasks:
    - name: Gather system facts
      setup:
      tags: always
    # üîπ Install Homebrew (Mac only)
    - name: Install Homebrew (macOS)
      block:
        - name: Install Homebrew
          shell: >
            /bin/zsh -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          args:
            creates: /usr/local/bin/brew
          when: ansible_os_family == "Darwin"
          tags: homebrew
      rescue:
        - name: Log Homebrew installation failure
          debug:
            msg: "‚ö†Ô∏è Homebrew installation failed, continuing."
          tags: homebrew

    # üîπ Install CLI tools (Mac & Linux)
    - name: Install CLI tools (Mac)
      block:
        - name: Install CLI tools
          homebrew:
            name:
              - zsh
              - neovim
              - curl
              - git
              - jq
              - make
              - docker
              - nnn
              - borgbackup
            state: present
          when: ansible_os_family == "Darwin"
          tags: cli
      rescue:
        - name: Log Mac CLI tool installation failure
          debug:
            msg: "‚ö†Ô∏è CLI tools installation failed on Mac, continuing."
          tags: cli

    - name: Install CLI tools (Ubuntu)
      block:
        - name: Remove conflicting containerd package (if exists)
          apt:
            name: containerd
            state: absent
          when: ansible_os_family == "Debian"
          tags: cli

        - name: Install CLI tools
          apt:
            name:
              - zsh
              - neovim
              - curl
              - git
              - jq
              - make
              - docker.io
              - nnn
              - syncthing
              - borgbackup
              - net-tools
              - chrome-gnome-shell
              - input-remapper
            state: present
            update_cache: yes
          when: ansible_os_family == "Debian"
          tags: cli
      rescue:
        - name: Log Ubuntu CLI tool installation failure
          debug:
            msg: "‚ö†Ô∏è CLI tools installation failed on Ubuntu, continuing."
          tags: cli

    # üîπ Install GUI Apps (Mac)
    - name: Install GUI apps (Mac)
      block:
        - name: Install GUI apps
          homebrew_cask:
            name:
              - arc
              - visual-studio-code
              - brave-browser
              - tor-browser
              - librewolf
              - zettlr
              - syncthing
            state: present
          when: ansible_os_family == "Darwin"
          tags: gui
      rescue:
        - name: Log Mac GUI apps installation failure
          debug:
            msg: "‚ö†Ô∏è GUI apps installation failed on Mac, continuing."
          tags: gui

    # üîπ Install GUI Apps (Ubuntu)
    - name: Install GUI apps (Ubuntu)
      block:
        - name: Add Brave Browser repository
          shell: |
            sudo apt install curl -y
            sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
            sudo apt update
          args:
            creates: /etc/apt/sources.list.d/brave-browser-release.list
          tags: gui

        - name: Install Brave, Tor, and VS Code
          apt:
            name:
              - brave-browser
              - torbrowser-launcher
            state: present
          tags: gui

        - name: Install VS Code (Snap)
          snap:
            name: code
            classic: yes
          tags: gui

        - name: Install Syncthing (Ubuntu)
          apt:
            name: syncthing
            state: present
          tags: gui

        - name: Install LibreWolf (Ubuntu)
          block:
            - name: Add LibreWolf repository key
              shell: |
                sudo mkdir -p /etc/apt/keyrings
                wget -qO- https://deb.librewolf.net/keyring.gpg | sudo tee /etc/apt/keyrings/librewolf.gpg > /dev/null
              args:
                creates: /etc/apt/keyrings/librewolf.gpg
              tags: gui

            - name: Add LibreWolf repository
              shell: |
                echo "deb [signed-by=/etc/apt/keyrings/librewolf.gpg arch=amd64] https://deb.librewolf.net $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/librewolf.list
              args:
                creates: /etc/apt/sources.list.d/librewolf.list
              tags: gui

            - name: Update apt and install LibreWolf
              apt:
                update_cache: yes
                name: librewolf
                state: present
              tags: gui

      when: ansible_os_family == "Debian"
      tags: gui
      rescue:
        - name: Log Ubuntu GUI apps installation failure
          debug:
            msg: "‚ö†Ô∏è GUI apps installation failed on Ubuntu, continuing."
          tags: gui

    # üîπ Clone All Repos from GitHub
    - name: Clone all GitHub repos
      block:
        - name: Clone repositories
          shell: >
            UserName=tylerjwoodfin;
            curl -s https://api.github.com/users/$UserName/repos?per_page=1000 |
            jq -r '.[]|.ssh_url' | xargs -I {} git clone {}
          args:
            chdir: "{{ ansible_env.HOME }}/git"
          tags: clone
      rescue:
        - name: Log repo cloning failure
          debug:
            msg: "‚ö†Ô∏è Cloning GitHub repositories failed, continuing."
          tags: clone

    # üîπ Install Miscellaneous Tools
    - name: Install CopyQ (Clipboard Manager)
      block:
        - name: Install CopyQ
          apt:
            name: copyq
            state: present
          when: ansible_os_family == "Debian"
          tags: copyq
      rescue:
        - name: Log CopyQ installation failure
          debug:
            msg: "‚ö†Ô∏è CopyQ installation failed, continuing."
          tags: copyq

    - name: Install Pihole (Ad Blocker)
      block:
        - name: Install PiHole
          shell: curl -sSL https://install.pi-hole.net | bash
          tags: pihole
      rescue:
        - name: Log PiHole installation failure
          debug:
            msg: "‚ö†Ô∏è PiHole installation failed, continuing."
          tags: pihole

    - name: Install Cabinet (Python Package)
      block:
        - name: Install Cabinet
          pip:
            name: cabinet
          tags: python
      rescue:
        - name: Log Cabinet installation failure
          debug:
            msg: "‚ö†Ô∏è Cabinet Python package installation failed, continuing."
          tags: python

    - name: Install RemindMail (Python Package)
      block:
        - name: Install RemindMail
          pip:
            name: remindmail
          tags: python
      rescue:
        - name: Log RemindMail installation failure
          debug:
            msg: "‚ö†Ô∏è RemindMail Python package installation failed, continuing."
          tags: python

    - name: Open external download links (Mac)
      block:
        - name: Open Mac download links
          shell: "open {{ item }}"
          loop:
            - "https://spotify.com/download"
            - "https://github.com/rustdesk/rustdesk/releases"
          when: ansible_os_family == "Darwin"
      rescue:
        - name: Log Mac download failure
          debug:
            msg: "‚ö†Ô∏è Mac download links failed to open, continuing."
      tags: downloads

    - name: Open external download links (Linux)
      block:
        - name: Open Linux download links
          shell: "xdg-open {{ item }}"
          loop:
            - "https://spotify.com/download"
            - "https://github.com/rustdesk/rustdesk/releases"
          when: ansible_os_family == "Debian"
      rescue:
        - name: Log Linux download failure
          debug:
            msg: "‚ö†Ô∏è Linux download links failed to open, continuing."
      tags: downloads

    # üîπ MacOS Defaults
    - name: Apply MacOS defaults
      block:
        - name: Execute mac.sh script using zsh
          ansible.builtin.command:
            cmd: zsh ../mac.sh
          args:
            chdir: "{{ playbook_dir }}"
          register: script_output
          tags: mac_defaults

        - name: Show script output
          debug:
            var: script_output.stdout
          when: ansible_os_family == "Darwin"
          tags: mac_defaults
      rescue:
        - name: Log MacOS defaults script failure
          debug:
            msg: "‚ö†Ô∏è mac.sh execution failed, continuing."
          tags: mac_defaults

    # üîπ Set Borg Passphrase
    - name: Set Borg passphrase
      block:
        - name: Prompt for and set Borg passphrase
          shell: |
            read -s -p "Enter Borg passphrase: " BORG_PASSPHRASE && echo \
            "export BORG_PASSPHRASE='$BORG_PASSPHRASE'" >> ~/.zshrc && source ~/.zshrc
          args:
            executable: /bin/zsh
          tags: borg

      rescue:
        - name: Log Borg passphrase setup failure
          debug:
            msg: "‚ö†Ô∏è Borg passphrase setup failed, continuing."
          tags: borg

    # üîπ Configure Git
    - name: Configure Git settings
      vars:
        git: "{{ ansible_env.HOME }}/git"
      block:
        - name: Apply Pre-push hooks
          shell: zsh {{ git }}/tools/githooks/apply_pre-push.sh
          args:
            executable: /bin/zsh
          tags: git

        - name: Set Git email defaults
          shell: |
            git config --global user.email "{{ self.git_addr }}"
            git config --global user.name "Tyler Woodfin"
          tags: git

        - name: Link global .gitignore to Git configuration
          shell: git config --global core.excludesfile {{ git }}/dotfiles/.gitignore
          tags: git

      rescue:
        - name: Log Git configuration failure
          debug:
            msg: "‚ö†Ô∏è Git configuration failed, continuing."
          tags: git

    # üîπ Configure SSH Authorized Keys
    - name: Apply the shared authorized_keys file
      block:
        - name: Update sshd_config with authorized_keys file path
          shell: |
            sudo sed -i '/^AuthorizedKeysFile/d' /etc/ssh/sshd_config
            echo 'AuthorizedKeysFile %h/.ssh/authorized_keys {{ ansible_env.HOME }}/docs/network/authorized_keys.md' | sudo tee -a /etc/ssh/sshd_config
          tags: ssh

        - name: Set authorized_keys notice
          copy:
            content: |
              # this file is empty.
              # authorized public keys are stored in ~/syncthing/md/docs/network/authorized_keys.md.
              # For instructions, see ~/syncthing/md/docs/network/ssh for instructions.
            dest: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
            mode: '0644'
          tags: ssh

        - name: Ensure correct directory permissions
          shell: find {{ ansible_env.HOME }} -type d -exec chmod 700 {} +
          tags: ssh

        - name: Ensure correct ownership of directories
          shell: find {{ ansible_env.HOME }} -type d -exec chown {{ ansible_env.USER }}:{{ ansible_env.USER }} {} +
          tags: ssh

        - name: Restart SSH service (Linux only)
          systemd:
            name: sshd
            state: restarted
          when: ansible_os_family == "Debian"
          tags: ssh

      rescue:
        - name: Log SSH configuration failure
          debug:
            msg: "‚ö†Ô∏è SSH authorized_keys setup failed, continuing."
          tags: ssh
